name: Deploy BigQuery API to Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: be-luma-infra
  SERVICE_NAME: bigquery-api
  REGION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (if you have them)
        run: |
          # python -m pytest tests/ -v
          echo "Tests would run here"

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 8080 \
            --memory 2Gi \
            --cpu 2 \
            --max-instances 100 \
            --min-instances 1 \
            --timeout 900 \
            --concurrency 80 \
            --set-env-vars "ENVIRONMENT=production,PORT=8080,LOG_LEVEL=INFO,GCP_PROJECT_ID=gama-454419,FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }},BIGQUERY_LOCATION=US,ALLOWED_ORIGINS=https://your-domain.com,SUPER_ADMIN_DOMAINS=be-luma.com" \
            --set-secrets "FIREBASE_SERVICE_ACCOUNT_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}:latest"

      - name: Get service URL
        id: deploy
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
          echo "url=$SERVICE_URL" >> $GITHUB_OUTPUT
          echo "Service deployed at: $SERVICE_URL"

      - name: Test deployment
        run: |
          SERVICE_URL=${{ steps.deploy.outputs.url }}
          echo "Testing health endpoint..."
          curl -f $SERVICE_URL/health || exit 1
          echo "âœ… Health check passed!"
